# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

# name: branch push unit-test

# on:
#   push:
#     branches:
#       - '!master'
#       - '!develop'
#       - '*'


# jobs:
#   pre-commit:
#     runs-on: ubuntu-latest
#     steps:
#       - uses: actions/checkout@v3
#       - uses: pre-commit/action@v3.0.0


#   build:

#     runs-on: ubuntu-latest
#     strategy:
#       max-parallel: 1
#       matrix:
#         python-version: [3.9]
#     steps:
#     - uses: actions/checkout@v3
#     - name: Set up Python ${{ matrix.python-version }}
#       uses: actions/setup-python@v3
#       with:
#         python-version: ${{ matrix.python-version }}
#     - name: Create env file
#       working-directory: ./
#       run: |
#         echo "Start creating .env file"
#         echo "${{ secrets.ENV_FILE }}" > .env
#         echo $PWD
#     - name: Run test
#       working-directory: ./
#       run: |
#         echo "Start running unit-test"
#         echo $PWD
#         cp ./docker-compose-cicd.yml ./docker-compose.yml
#         echo "Start building"
#         docker-compose up --build -d
#         echo "Start define entrypoint"
#         ENTRYPOINT="python -m pytest --cov=app --html=test/report/report.html -W ignore::DeprecationWarning -s --capture=fd --log-cli-level=DEBUG"
#         echo "migrate alembic"
#         docker-compose exec -T backend alembic upgrade head
#         docker-compose exec -T backend python3 -m app.initial_data
#         docker-compose exec -T backend python3 -m app.database.test.test_database
#         docker-compose exec -T backend python3 -m app.database.test.initial_test_data
#         echo "Start run pytest"
#         docker-compose exec -T backend $ENTRYPOINT
#     - name: log
#       run: |
#         docker-compose logs